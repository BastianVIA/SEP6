@page "/"
@using Blazorise
@using Frontend.Entities
@using Frontend.Model.Recommendations
@inject NavigationManager NavManager
@inject IRecommendationsModel RecommendationsModel
@using Blazorise.LottieAnimation

@if (recommendationsLoaded)
{
    <div class="card-deck-container">
        <h2>Recommended Movies</h2>
        <CardDeck>
            @foreach (Movie movie in recommendations)
            {
                <Card @onclick="@(() => OnMovieClick(movie.Id))">
                    <CardImage Source="@movie.PosterUrl.ToString()" Alt="poster"/>
                    <CardBody>
                        <CardTitle Size="6" TextWeight="TextWeight.Bold">
                            @movie.Title
                        </CardTitle>
                        <CardText >
                            @movie.Rating.AverageRating <Icon TextColor="TextColor.Warning" Name="IconName.Star"/>
                        </CardText>
                    </CardBody>
                </Card>
                counter++;
                if (amountOfMoviesToShow <= counter)
                {
                    counter = 0;
                    break;
                }
            }
        </CardDeck>
    </div>
}

else
{
    <LottieAnimation Path="/Animations/loadingAimation.json" Style="height: 200px"/>
}

@code {

    private IList<Movie> recommendations = new List<Movie>();
    private bool recommendationsLoaded = false;
    private int amountOfMoviesToShow = 8;
    private int counter = 0;

    protected override async Task OnInitializedAsync()
    {
        await LoadRecommendedMovies();
    }

    private async Task LoadRecommendedMovies()
    {
        recommendations = await RecommendationsModel.GetRecommendations();
        recommendationsLoaded = true;
    }

    private void OnMovieClick(string movieId)
    {
        NavManager.NavigateTo($"movieDetails/{movieId}");
    }
}