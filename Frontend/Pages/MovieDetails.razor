@page "/MovieDetails/{movieId}"
@using Frontend.Entities
@using Frontend.Model.MovieDetail
@using Blazorise
@using Frontend.Model.FavoriteMovies
@using Frontend.Model.Firebase
@using Button = Blazorise.Bootstrap.Button
@inject IMovieDetailModel MovieDetailModel
@inject IFavoriteMoviesModel FavoriteMoviesModel
@inject IFirebaseModel FirebaseModel

<h3>Movie Details</h3>

<div class="movie-detail">
    <h2>@Movie?.Title (@Movie?.ReleaseYear)</h2>

    <img src="@Movie?.PosterUrl" alt="@Movie?.Title poster" class="movie-poster" />

    <div>
        <h3>Actors</h3>
        <ul>
            @if (Movie?.Actors != null)
            {
                foreach (var actor in Movie.Actors)
                {
                    <li>@actor.Name, @actor.BirthYear</li>
                }
            }
            else
            {
                <li>No actors listed</li>
            }
        </ul>
    </div>

    <div>
        <h3>Directors</h3>
        <ul>
            @if (Movie?.Directors != null)
            {
                foreach (var director in Movie.Directors)
                {
                    <li>@director.Name, @director.BirthYear</li>
                }
            }
            else
            {
                <li>No directors listed</li>
            }
        </ul>
    </div>

    <div>
        <h3>Rating</h3>
        <p>@(Movie?.Rating?.AverageRating.ToString() ?? "N/A") based on @(Movie?.Rating?.RatingCount.ToString() ?? "N/A") votes</p>
    </div>

    <div>
        <h3>Resume</h3>
        <p>@Movie?.Resume</p>
    </div>
    <div>
        <Button Color="Color.Primary" Clicked="StarClicked"><Icon Name="IconName.Star" /></Button>
    </div>
</div>

@code {
    [Parameter]
    public string MovieId { get; set; }
    private Movie Movie;
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Movie = await MovieDetailModel.GetMovieDetails(MovieId);
            StateHasChanged(); 
        }
    }

    private void StarClicked()
    {
        FavoriteMoviesModel.AddToFavoriteMovies(FirebaseModel.CurrentUser.TokenValue, MovieId);
    }

}
