@page "/SearchResult/{movieTitle}"
@using Frontend.Entities
@using Frontend.Service
@inject IMovieSearchModel MovieSearchModel
@inject NavigationManager NavManager
@using Blazorise.LottieAnimation
@using Blazorise
@using Frontend.Model.MovieSearch

<PageTitle>Search Result</PageTitle>

@if (isDataFetched)
{
    <div class="page-content">
        <h3>Search Result</h3>

        @if (movieList.Count == 0)
        {
            <p size="20px">No such movie exists.</p>
        }
        <Table Hoverable Striped>
            <TableHeader>
                <TableRow>
                    <TableHeaderCell>Poster</TableHeaderCell>
                    <TableHeaderCell>Title</TableHeaderCell>
                    <TableHeaderCell>Release Year <Button Color="Color.Secondary" Clicked="SortByReleaseYear"><Icon Name="@IconName.AngleDown"/></Button></TableHeaderCell>
                    <TableHeaderCell>Rating <Button Color="Color.Secondary" Clicked="SortByRating"><Icon Name="@IconName.AngleDown"/></Button></TableHeaderCell>
                </TableRow>
            </TableHeader>
            <TableBody>
                @foreach(Movie movie in movieList)
                {
                    <TableRow @onclick="@(() => OnMovieClick(movie.Id))">
                        <TableRowCell><img src="@movie.PosterUrl" height="200"/></TableRowCell>
                        <TableRowCell>@movie.Title</TableRowCell>
                        <TableRowCell>@movie.ReleaseYear</TableRowCell>
                        <TableRowCell>@movie.Rating?.AverageRating <Icon TextColor="TextColor.Warning" Name="IconName.Star"/></TableRowCell>
                    </TableRow> 
                }
            </TableBody>
        </Table>

        <div class="page-navigation">
            <button class="btn btn-secondary" @onclick="@GoToPreviousPage">
                <Icon Name="@IconName.AngleLeft"/>
            </button>
            <div class="page-number">
                <p>Page @pageNumber</p>
            </div>
            <button class="btn btn-secondary" @onclick="@GoToNextPage">
                <Icon Name="@IconName.AngleRight"/>
            </button>
        </div>

    </div>
}
else
{
    <LottieAnimation Path="/Animations/loadingAimation.json" Style="@(@"height: 200px")"/>
}
@code {
    [Parameter]
    public string MovieTitle { get; set; }
    private IList<Movie> movieList = new List<Movie>();
    private string movieTitle { get; set; }
    private int pageNumber { get; set; }
    
    private bool isDataFetched = false;
    private MovieSortingKey? sortingKey;
    private SortingDirection? sortingDirection;
    private int moviesPerPage = 10;
    
    [Parameter]
    public string SearchTerm { get; set; }
    
    // protected override async Task OnParametersSetAsync()
    // {
    //     movieTitle = MovieTitle;
    //     pageNumber = 1;
    //     await SearchForMovie();
    // }
    
    protected override async Task OnParametersSetAsync()
    {
        movieTitle = SearchTerm;
        pageNumber = 1;
        await SearchForMovie();
    }

    private async Task SearchForMovie()
    {
        isDataFetched = false;
        movieList.Clear();
        movieList = await MovieSearchModel.SearchForMovieAsync(movieTitle, sortingKey, sortingDirection, pageNumber);
        isDataFetched = true;
    }

    private void OnMovieClick(string movieId)
    {
        NavManager.NavigateTo($"movieDetails/{movieId}");
    }

    private async Task SortByRating()
    {
        sortingKey = MovieSortingKey.Rating;
        pageNumber = 1;
        await SearchForMovie();
    }

    private async Task SortByReleaseYear()
    {
        sortingKey = MovieSortingKey.ReleaseYear;
        pageNumber = 1;
        await SearchForMovie();
    }

    private async Task GoToNextPage()
    {
        if (movieList.Count < moviesPerPage)
        {
            return;
        }
        pageNumber++;
        await SearchForMovie();
    }

    private async Task GoToPreviousPage()
    {
        if (pageNumber <= 1)
        {
            return;
        }
        pageNumber--;
        await SearchForMovie();
    }
}


