@page "/FavoriteMovies"
@using Frontend.Entities
@using Frontend.Model.FavoriteMovies
@using Frontend.Model.Firebase
@inject NavigationManager NavManager
@inject IFirebaseModel FirebaseModel
@inject IFavoriteMoviesModel FavoriteMoviesModel
@using Blazorise
@using Frontend.Components
@using Blazorise.LottieAnimation
@attribute [Authorize]

@if (favoriteMoviesLoaded)
{
    <div class="page-content">
        <h3>Favorite Movies</h3>

        <MovieTable MovieList="@favoriteMovies" PosterSize="200" OnMovieClicked="OnMovieClick"/>
    </div>
}
else
{
    <LottieAnimation Path="/Animations/loadingAimation.json" Style="height: 200px"/>
}

@code {

    private IList<Movie> favoriteMovies = new List<Movie>();
    private bool favoriteMoviesLoaded = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadFavoriteMovies();
    }

    private async Task LoadFavoriteMovies()
    {
        favoriteMovies = await FavoriteMoviesModel.GetFavoriteMovies(FirebaseModel.CurrentUser.TokenValue, FirebaseModel.CurrentUser.UID);
        favoriteMoviesLoaded = true;
    }

    private void OnMovieClick(string movieId)
    {
        NavManager.NavigateTo($"movieDetails/{movieId}");
    }
}