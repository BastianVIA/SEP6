@inject NavigationManager NavManager;
@implements IDisposable
@using Blazorise
@using Frontend.Components
@using Frontend.Events
@using Frontend.Model.FirebaseModel
@using Frontend.Pages
@inject IFirebaseModel FirebaseModel
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

<div class="top-row ps-3 navbar navbar-dark">
    <div class="flex-row">
        <a class="navbar-brand" href="">BMMS-MDB</a>
        <div class="nav-item">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item">
            <NavLink class="nav-link" href="SignUp_Login">
                <span class="oi oi-lock-locked" aria-hidden="true"></span> SignUp/Login
            </NavLink>
        </div>
        <div class="nav-item">
            <form @onsubmit="@SearchForMovie">
                <div class="form-container">
                    <div class="form-container-item">
                        <input type="text" @bind="@movieTitle"/><br>
                    </div>
                    <div class="form-container-item">
                        <button class="btn btn-primary"><Icon Name="IconName.Search"/></button>
                    </div>
                </div>
            </form>
        </div>
        <div class="nav-item">
            <TextEdit Text="@displayName"></TextEdit>
        </div>
    </div>

</div>

@code {
    private string movieTitle { get; set; }
    public string displayName { get; set; }
    private void SearchForMovie()
    {
        NavManager.NavigateTo($"searchResult/{movieTitle}");
    }

    protected override void OnInitialized()
    {
        FirebaseModel.OnNotifyAlert += SetDisplayName;
    }


    private void SetDisplayName(object? sender, AlertEventArgs args)
    {
        displayName = args.Type == AlertBoxHelper.AlertType.LoginSuccess ? args.Reason : "";
        StateHasChanged();
    }
    
    public void Dispose()
    {
        FirebaseModel.OnNotifyAlert -= SetDisplayName;
    }

}